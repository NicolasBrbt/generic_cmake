set(PRINT "ON")

set(BSC_main "main")
set(BSC_main_cpp "main_cpp")
set(BSC_main_c "main_c")
set(BSC_Test "Test")

set(BSC_main_DEPS BSC_Test)
set(BSC_main_cpp_DEPS "")
set(BSC_main_c_DEPS "")
set(BSC_Test_DEPS "")

set(APPCPP BSC_main BSC_main_cpp)
set(APPC BSC_main_c)
set(LIBC)
set(LIBCPP BSC_Test)
set(DYNLIB)

set(COMPOSANTS ${APPC} ${APPCPP} ${LIB} ${LIBCPP} ${DYNLIB})

if(PRINT)
    foreach(BSC ${COMPOSANTS})
    set(sources "")
    set(headers "")
    set(dirs "")
    
    string(REGEX REPLACE "BSC_" "" component ${BSC})
    string(REGEX REPLACE "BSC_" "" deps "${BSC_${component}_DEPS}")
    
    message(NOTICE "------------------------------------------------------------------")
    message(NOTICE "* Component: ${component}")
    message(NOTICE "* Dependencies : ${deps}")
    message(NOTICE "* Path : ${CMAKE_CURRENT_SOURCE_DIR}/${${BSC}}")
    
    # Collecter les sous-répertoires dans 'include'
    file(GLOB subdirsHeaders "${CMAKE_CURRENT_SOURCE_DIR}/${${BSC}}/include/*")
    file(GLOB subdirsSources "${CMAKE_CURRENT_SOURCE_DIR}/${${BSC}}/src/*")
    
    foreach(dir ${subdirsHeaders})
        if(IS_DIRECTORY ${dir})
            list(APPEND dirs ${dir})
            file(GLOB tmp_headers "${dir}/*.h" "${dir}/*.hpp")
            list(APPEND headers ${tmp_headers})
        endif()
    endforeach()

    foreach(dir ${subdirsSources})
    if(IS_DIRECTORY ${dir})
        list(APPEND dirs ${dir})

        # Collecter les headers dans chaque sous-répertoire
        file(GLOB tmp_sources "${dir}/*.c" "${dir}/*.cpp")
        list(APPEND sources ${tmp_sources})
    endif()
    endforeach()

    
    # Collecter les sources dans 'src'
    file(GLOB tmp_sources "${CMAKE_CURRENT_SOURCE_DIR}/${${BSC}}/src/*.c" "${CMAKE_CURRENT_SOURCE_DIR}/${${BSC}}/src/*.cpp")
    list(APPEND sources ${tmp_sources})
    
    # Collecter les headers dans 'include' (directement sous include, pas dans les sous-dossiers)
    file(GLOB tmp_headers "${CMAKE_CURRENT_SOURCE_DIR}/${${BSC}}/include/*.h" "${CMAKE_CURRENT_SOURCE_DIR}/${${BSC}}/include/*.hpp")
    list(APPEND headers ${tmp_headers})
    
    message(NOTICE "* Sources :")
    foreach(source ${sources})
        message(NOTICE "\t- ${source}")
    endforeach()
    
    message(NOTICE "* Headers :")
    foreach(header ${headers})
        message(NOTICE "\t- ${header}")
    endforeach()
    
    message(NOTICE "* Sous-répertoires du projet :")
    foreach(dir ${dirs})
        message(NOTICE "\t- ${dir}")
    endforeach()
    
        message(NOTICE "------------------------------------------------------------------\n")
    endforeach(BSC ${COMPOSANTS})
endif(PRINT)

